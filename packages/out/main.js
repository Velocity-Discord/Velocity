"use strict";var e=require("electron"),a=require("module"),n=require("path"),t=require("fs"),s=require("electron-devtools-installer");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=r(e),i=r(a),l=r(n),d=r(t),c=r(s);d.default.existsSync(l.default.join(__dirname,"../../data/config.json"))||d.default.writeFileSync(l.default.join(__dirname,"../../data/config.json"),JSON.stringify({}));const u=JSON.parse(d.default.readFileSync(l.default.join(__dirname,"../../data/config.json"),"utf8"));class p extends o.default.BrowserWindow{constructor(e){if(!e||!e.webPreferences||!e.webPreferences.preload||process.argv.includes("--vanilla"))return super(e);const a=e.webPreferences.preload;return process.env.DISCORD_PRELOAD=a,e={...e,webPreferences:{...e.webPreferences,preload:e.title&&e.webPreferences&&e.webPreferences.nativeWindowOpen?l.default.join(__dirname,"preload.js"):l.default.join(__dirname,"preloadSplash.js"),nodeIntegration:!0,devTools:!0},transparent:!!u.Transparency,vibrancy:u.Vibrancy?"hud":void 0,backgroundColor:"#00000000",visualEffectState:"active"},new o.default.BrowserWindow(e)}}var f="velocity:handle-kill";process.env.VELOCITY_DIRECTORY=l.default.join(__dirname,"../../"),o.default.app.commandLine.appendSwitch("no-force-async-hooks-checks"),o.default.app.on("ready",(()=>{c.default(s.REACT_DEVELOPER_TOOLS),o.default.session.defaultSession.webRequest.onHeadersReceived((function({responseHeaders:e},a){for(const a of Object.keys(e))a.includes("content-security-policy")&&delete e[a];a({cancel:!1,responseHeaders:e})})),e.ipcMain.handle(f,(()=>{o.default.dialog.showMessageBox({type:"warning",title:"Process Exited",message:"The Discord process has been killed."}),process.exit(1)}))}));const g=require.resolve("electron");delete require.cache[g]?.exports,require.cache[g].exports={...o.default,BrowserWindow:p};const _="DANGEROUS_ENABLE_DEVTOOLS_ONLY_ENABLE_IF_YOU_KNOW_WHAT_YOURE_DOING";global.appSettings||(global.appSettings={}),global.appSettings?.settings||(global.appSettings.settings={});const w=global.appSettings.settings;global.appSettings.settings=new Proxy(w,{get:(e,a)=>a===_||e[a],set:(e,a,n)=>(a===_||(e[a]=n),!0)}),function(){const e=l.default.join(process.resourcesPath,"app.asar"),a=JSON.parse(d.default.readFileSync(l.default.join(e,"package.json"),"utf8"));o.default.app.setAppPath(e),o.default.app.name=a.name,i.default._load(l.default.join(e,a.main),null,!0)}();
