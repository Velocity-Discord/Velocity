"use strict";var e=require("electron"),r=require("path"),t=require("fs"),n=require("https");function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=o(e),a=o(r),i=o(t),u=o(n);const c=require("fs"),l=require("path"),d=require("sucrase"),f=require("original-fs"),p=require("electron");var q={Meta:{version:"2.0.0",hash:"6d51ab"},modules:{fs:c,path:l,sucrase:d,originalFs:f,shell:p.shell,ipcRenderer:p.ipcRenderer},async request(e,r={},t){let n,o,s="",a="function"==typeof r?{}:r,i="function"==typeof r?r:t;const c=new Promise(((r,t)=>{const i=u.default.request(e,a,(e=>{o=e,e.on("data",(e=>{s+=e})),e.on("end",(()=>{r()}))}));i.on("error",(e=>{n=!0,t()})),i.end()}));return await c,i&&i(n,o,s),s},get baseDir(){return process.env.VELOCITY_DIRECTORY}};const h=process.env.DISCORD_PRELOAD;h&&require(h),s.default.contextBridge.exposeInMainWorld("VelocityCore",q),s.default.webFrame.executeJavaScript(`(async () => {try{${i.default.readFileSync(a.default.join(__dirname,"renderer.js"),"utf8")}}catch(e){console.error(e)}})(window)//# sourceURL=Velocity`);
